Index: uvp-xenpv/uvp-pvops_xen_driver-2.6.32to4.0.x/xen-hcall/xen-hcall.c
===================================================================
--- uvp-xenpv.orig/uvp-pvops_xen_driver-2.6.32to4.0.x/xen-hcall/xen-hcall.c
+++ uvp-xenpv/uvp-pvops_xen_driver-2.6.32to4.0.x/xen-hcall/xen-hcall.c
@@ -40,14 +40,33 @@
 #include <linux/poll.h>
 #include <linux/sched.h>
 #include <asm/uaccess.h>
-#include <xen/xs_wire.h>
 #include <xen/xenbus.h>
 #include <xen/interface/xen.h>
+#include <xen/interface/io/xs_wire.h>
+#include <linux/version.h>
+#ifdef ARCH_X86_XEN_MCA_H
+#include <xen/interface/arch-x86/xen-mca.h>
+#endif
+
+#if 1 //(LINUX_VERSION_CODE >= KERNEL_VERSION(3,0,0))
 #include <asm/xen/hypervisor.h>
 #include <asm/xen/hypercall.h>
 #ifdef UBUNTU_KERNEL_3110
 #include "internal.h"
 #endif
+#else
+#include <asm/hypervisor.h>
+#include <xen/hypercall.h>
+#endif
+
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(3,10,0))
+#define REG_PROC_OPS(TGT,NM,PERM,NUL,FOPS) \
+	TGT = create_proc_entry(NM, PERM, NUL);	\
+	if (TGT) TGT->proc_fops = FOPS
+#else
+#define REG_PROC_OPS(TGT,NM,PERM,NUL,FOPS) \
+	TGT = proc_create(NM,PERM,NUL,FOPS);
+#endif
 
 MODULE_LICENSE("GPL");
 MODULE_DESCRIPTION("Xen DomU Hypercall Filesystem");
@@ -79,7 +98,7 @@ static ssize_t hcall_read(struct file *f
 
 	if(ret < 0)
 	{
-		printk( KERN_INFO "Xen-hcall: DmoU call hypercall fail! Error Code : %d.\n", ret );
+		printk( KERN_INFO "Xen-hcall: DomU call hypercall fail! Error Code : %d.\n", ret );
 		return ret;
 	}
 	
@@ -101,19 +120,14 @@ static int hcall_procfs_init(void)
 {
     int ret = 0;
 
-    #if defined UBUNTU_KERNEL_3110
-    proc_entry = proc_create( "xen_hcall", S_IRUSR, NULL, &hcall_file_ops);
-    #else
-    proc_entry = create_proc_entry( "xen_hcall", S_IRUSR, NULL );
-    #endif
+    REG_PROC_OPS(proc_entry, "xen_hcall", S_IRUSR, NULL, &hcall_file_ops);
     if ( proc_entry == NULL )
     {
         ret = -ENOMEM;
-        printk( KERN_INFO "Xen-hcall: Couldn't create DmoU hypercall user-space entry!\n");
+        printk( KERN_INFO "Xen-hcall: Couldn't create DomU hypercall user-space entry!\n");
     }
     else
     {
-        proc_entry->proc_fops = &hcall_file_ops;
         printk( KERN_INFO "Xen_hcall: DomU hypercall user-space has been created.\n" );
     }
     
Index: uvp-xenpv/uvp-pvops_xen_driver-2.6.32to4.0.x/xen-procfs/xen-procfs.c
===================================================================
--- uvp-xenpv.orig/uvp-pvops_xen_driver-2.6.32to4.0.x/xen-procfs/xen-procfs.c
+++ uvp-xenpv/uvp-pvops_xen_driver-2.6.32to4.0.x/xen-procfs/xen-procfs.c
@@ -18,10 +18,20 @@
 #include <linux/poll.h>
 #include <linux/sched.h>
 #include <asm/uaccess.h>
-#include <xen/xs_wire.h>
 #include <xen/xenbus.h>
-#ifdef UBUNTU_KERNEL_3110
-#include "internal.h"
+#include <xen/interface/io/xs_wire.h>
+#include <linux/version.h>
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(3,10,0))
+#define REG_PROC_OPS(TGT,NM,PERM,NUL,FOPS) \
+	TGT = create_proc_entry(NM, PERM, NUL);	\
+	if (TGT) TGT->proc_fops = FOPS
+#else
+#define REG_PROC_OPS(TGT,NM,PERM,NUL,FOPS) \
+	TGT = proc_create(NM,PERM,NUL,FOPS);
+#endif
+
+#ifndef XS_LINUX_WEAK_WRITE
+#define XS_LINUX_WEAK_WRITE 128
 #endif
 
 MODULE_LICENSE("GPL");
@@ -381,11 +391,7 @@ static int xenbus_procfs_init(void)
 {
     int ret = 0;
 
-#if defined UBUNTU_KERNEL_3110
-    proc_entry = proc_create( "xen/xenbus", 0644, NULL,&xenbus_dev_file_ops);
-#else
-    proc_entry = create_proc_entry( "xen/xenbus", 0644, NULL );
-#endif
+    REG_PROC_OPS(proc_entry, "xen/xenbus", 0644, NULL, &xenbus_dev_file_ops);
     if ( proc_entry == NULL )
     {
         ret = -ENOMEM;
@@ -393,19 +399,10 @@ static int xenbus_procfs_init(void)
     }
     else
     {
-        proc_entry->proc_fops = &xenbus_dev_file_ops;
         printk( KERN_INFO "Procfs: xenbus user-space has been created.\n" );
     }
 
-#if defined UBUNTU_KERNEL_3110
-    proc_entry = proc_create( "xen/version", 0644, NULL,&xenbus_dev_file_ops);
-#else
-#if defined GENTOO_KERNEL_390
-    proc_entry = create_proc_entry( "xen_version", 0644, NULL );
-#else
-    proc_entry = create_proc_entry( "xen/version", 0644, NULL );
-#endif
-#endif
+    REG_PROC_OPS(proc_entry, "xen/version", 0644, NULL, &xenbus_dev_file_ops);	/* Should last arg be NULL ? */
 
     if ( proc_entry == NULL )
     {
@@ -414,7 +411,7 @@ static int xenbus_procfs_init(void)
     }
     else
     {
-	    //proc_entry->proc_fops = &xenbus_version_file_ops;
+	//proc_entry->proc_fops = &xenbus_version_file_ops;
         printk( KERN_INFO "Procfs: xenbus version has been created.\n" );
     }
 
